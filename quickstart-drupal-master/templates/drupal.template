{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploys Drupal on AWS. (qs-1nqqf5knr)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "VPCCIDR",
                        "PrivateSubnet1ID",
                        "PrivateSubnet2ID",
                        "PublicSubnet1ID",
                        "PublicSubnet2ID",
                        "BastionSecurityGroupID"
                    ]
                },
                {
                    "Label":{
                        "default": "Drupal Site Domain Configuration"
                    },
                    "Parameters":[
                        "Route53HostedZoneId",
                        "DrupalSiteDomain",
                        "CloudFrontAlias"
                    ]
                },
                {
                    "Label": {
                        "default": "Aurora Database Configuration"
                    },
                    "Parameters": [
                        "DBAutoMinorVersionUpgrade",
                        "DBBackupRetentionPeriod",
                        "DBInstanceClass",
                        "DBMasterUsername",
                        "DBMasterUserPassword",
                        "DBMultiAZ"
                    ]
                },
                {
                    "Label": {
                        "default": "Drupal Configuration"
                    },
                    "Parameters": [
                        "PhpVersion",
                        "DrupalVersion",
                        "DrupalSiteName",
                        "DrupalSiteAdminEmail",
                        "DrupalSiteAdminUsername",
                        "DrupalSiteAdminPassword",
                        "DrupalDbName",
                        "DrupalDbUsername",
                        "DrupalDbPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Drupal Webserver Configuration"
                    },
                    "Parameters": [
                        "WebServerInstanceType",
                        "KeyPair",
                        "WebServerMinSize",
                        "WebServerMaxSize",
                        "WebServerDesiredCapacity",
                        "AutoScalingNotificationEmail",
                        "SSLCertificateId"
                    ]
                },
                {
                    "Label": {
                        "default": "ElastiCache Configuration"
                    },
                    "Parameters": [
                        "ElastiCacheEnable",
                        "ElastiCacheAutoMinorVersionUpgrade",
                        "ElastiCacheNodeType",
                        "ElastiCacheNumberOfNodes"
                    ]
                },
                {
                    "Label": {
                        "default": "CDN - CloudFront Configuration"
                    },
                    "Parameters": [
                        "CloudFrontEnable",
                        "CloudFrontPriceClass"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "AutoScalingNotificationEmail": {
                    "default": "Autoscaling Notification Email"
                },
                "BastionSecurityGroupID": {
                    "default": "Bastion Security Group ID"
                },
                "DBAutoMinorVersionUpgrade": {
                    "default": "Enable Auto Minor Version Upgrade"
                },
                "DBBackupRetentionPeriod": {
                    "default": "Backup Retention Period"
                },
                "DBInstanceClass": {
                    "default": "Database Instance Size"
                },
                "DBMasterUserPassword": {
                    "default": "Database Admin Password"
                },
                "DBMasterUsername": {
                    "default": "Database Admin Username"
                },
                "DBMultiAZ": {
                    "default": "Multi-AZ Database"
                },
                "DrupalDbName": {
                    "default": "Drupal Database Name"
                },
                "DrupalDbPassword": {
                    "default": "Drupal Database Password"
                },
                "DrupalDbUsername": {
                    "default": "Drupal Database Username"
                },
                "DrupalSiteAdminEmail": {
                    "default": "Drupal Site Admin Email"
                },
                "DrupalSiteAdminPassword": {
                    "default": "Drupal Site Admin Password"
                },
                "DrupalSiteAdminUsername": {
                    "default": "Drupal Site Admin Username"
                },
                "DrupalSiteDomain": {
                    "default": "Drupal Site Domain"
                },
                "DrupalSiteName": {
                    "default": "Drupal Site Name"
                },
                "DrupalVersion": {
                    "default": "Drupal Version"
                },
                "KeyPair": {
                    "default": "SSH Keypair Name"
                },
                "PhpVersion": {
                    "default": "PHP Version"
                },
                "PrivateSubnet1ID": {
                    "default": "Private Subnet 1 ID"
                },
                "PrivateSubnet2ID": {
                    "default": "Private Subnet 2 ID"
                },
                "PublicSubnet1ID": {
                    "default": "Public Subnet 1 ID"
                },
                "PublicSubnet2ID": {
                    "default": "Public Subnet 2 ID"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "SSLCertificateId": {
                    "default": "SSL Certificate ARN"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "VPCID": {
                    "default": "VPC ID"
                },
                "WebServerDesiredCapacity": {
                    "default": "Desired number of Instances"
                },
                "WebServerInstanceType": {
                    "default": "Webserver Instance Size"
                },
                "WebServerMaxSize": {
                    "default": "Max Number of Instances"
                },
                "WebServerMinSize": {
                    "default": "Min Number of Instances"
                },
                "CloudFrontEnable":{
                    "default": "Enable CloudFront"
                },
                "CloudFrontPriceClass":{
                    "default": "CloudFront PriceClass"
                },
                "CloudFrontAlias":{
                    "default": "CloudFront Alias"
                },
                "Route53HostedZoneId":{
                    "default": "Route53 Hosted Zone ID"
                },
                "ElastiCacheEnable":{
                    "default": "Enable ElastiCache"
                },
                "ElastiCacheAutoMinorVersionUpgrade":{
                    "default": "Enable ElastiCache Auto Minor Version Upgrade"
                },
                "ElastiCacheNodeType":{
                    "default": "ElastiCache Node Type"
                },
                "ElastiCacheNumberOfNodes":{
                    "default": "Number of ElastiCache Nodes"
                }
            }
        }
    },
    "Parameters": {
        "AutoScalingNotificationEmail": {
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "Must be a valid email address.",
            "Description": "Email address to notify Auto Scaling operations",
            "Type": "String"
        },
        "BastionSecurityGroupID": {
            "Description": "ID of the Bastion Security Group (e.g., sg-7f16e910)",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "DBAutoMinorVersionUpgrade": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Select true/false to setup Auto Minor Version upgrade",
            "Type": "String"
        },
        "DBBackupRetentionPeriod": {
            "Default": "7",
            "Description": "The number of days for which automatic DB snapshots are retained.",
            "Type": "String"
        },
        "DBInstanceClass": {
            "AllowedValues": [
                "db.t2.small",
                "db.t2.medium",
                "db.r3.large",
                "db.r3.xlarge",
                "db.r3.2xlarge",
                "db.r3.4xlarge",
                "db.r3.8xlarge"
            ],
            "ConstraintDescription": "Must select a valid database instance type.",
            "Default": "db.t2.small",
            "Description": "Select Instance size for the Database",
            "Type": "String"
        },
        "DBMasterUserPassword": {
            "AllowedPattern": "(?=\\S)[^@/\"\\r\\n\\t\\f\\s]*",
            "ConstraintDescription": "Min 8 alphanumeric. Cannot contain white space, @, /, \"",
            "Description": "The database admin account password",
            "MaxLength": "41",
            "MinLength": "8",
            "NoEcho": "True",
            "Type": "String"
        },
        "DBMasterUsername": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
            "Default": "dbadmin",
            "Description": "The database admin account username",
            "MaxLength": "16",
            "MinLength": "1",
            "Type": "String"
        },
        "DBMultiAZ": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Specifies if the database instance is a multiple Availability Zone deployment.",
            "Type": "String"
        },
        "DrupalDbName": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "Default": "drupaldb",
            "Description": "Name of the Database to be created and used for Drupal",
            "MaxLength": "64",
            "MinLength": "5",
            "Type": "String"
        },
        "DrupalDbPassword": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "Must contain only alphanumeric characters and must be between 8 and 41 characters long.",
            "Description": "The drupal database user account password",
            "MaxLength": "41",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "DrupalDbUsername": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
            "Default": "drupal",
            "Description": "The drupal database user account",
            "MaxLength": "16",
            "MinLength": "1",
            "Type": "String"
        },
        "DrupalSiteAdminEmail": {
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "Must be a valid email address.",
            "Description": "Drupal Site Administrator Email",
            "Type": "String"
        },
        "DrupalSiteAdminPassword": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "Must contain only alphanumeric characters and must be between 8 and 41 characters long.",
            "Description": "The Drupal site admin account password",
            "MaxLength": "41",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "DrupalSiteAdminUsername": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "Must begin with a letter, contain only alphanumeric characters and must be between 5 and 16 characters long",
            "Default": "admin",
            "Description": "The Drupal site admin account username",
            "MaxLength": "16",
            "MinLength": "5",
            "Type": "String"
        },
        "DrupalSiteDomain": {
            "Description": "Domain name of the site. e.g. example.com. Valid FQDN required when using SSL. Leave the default localhost.local for test environments.",
            "AllowedPattern": "(?!-)[a-zA-Z0-9-.]*(?<!-)",
            "ConstraintDescription": "Must be a valid fully-qualified domain name.",
            "Type": "String", 
            "Default": "localhost.local"
        },
        "DrupalSiteName": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9 ]*",
            "ConstraintDescription": "Min 5 chars. Only alphanumeric",
            "Default": "My Site",
            "Description": "Descriptive name for your drupal site",
            "MaxLength": "64",
            "MinLength": "5",
            "Type": "String"
        },
        "DrupalVersion": {
            "AllowedValues": [
                "7",
                "8"
            ],
            "ConstraintDescription": "Allowed values 7 or 8",
            "Default": "7",
            "Description": "Drupal version to install",
            "Type": "String"
        },
        "KeyPair": {
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
            "Default": "id_rsa_aws",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PhpVersion": {
            "AllowedValues": [
                "php56",
                "php70",
                "php71"
            ],
            "ConstraintDescription": "Choose a valid PHP version. Values can be php56, php70, php71 ",
            "Default": "php71",
            "Description": "PHP version to be installed. PHP-5.6=php56, PHP-7.0=php70, PHP-7.1=php71",
            "Type": "String"
        },
        "PrivateSubnet1ID": {
            "Description": "Private Subnet ID 1 located in Availability Zone 1",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet2ID": {
            "Description": "Private Subnet ID 2  located in Availability Zone 2",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet1ID": {
            "Description": "Public Subnet ID 1 located in Availability Zone 1",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "Public Subnet ID 2 located in Availability Zone 2",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "AWS Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "quickstart-drupal/",
            "Description": "S3 key prefix for the AWS Quick Start assets.AWS Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        },
        "SSLCertificateId": {
            "Default": "",
            "Description": "(Optional) The ARN of the SSL certificate to use for the webserver",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "Must be a valid IP range in x.x.x.x/x notation",
            "Description": "The CIDR IP range of VPC",
            "Type": "String"
        },
        "VPCID": {
            "Description": "Select the VPC to deploy Drupal",
            "Type": "AWS::EC2::VPC::Id"
        },
        "WebServerDesiredCapacity": {
            "Default": "2",
            "Description": "Desired number of web server instances in Auto Scaling group",
            "Type": "Number"
        },
        "WebServerInstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ],
            "ConstraintDescription": "Choose an instance type.",
            "Default": "t2.micro",
            "Description": "Select webserver instance size",
            "Type": "String"
        },
        "WebServerMaxSize": {
            "Default": "12",
            "Description": "Maximum number of web server instances in Auto Scaling group",
            "Type": "Number"
        },
        "WebServerMinSize": {
            "Default": "1",
            "Description": "Minimum number of web server instances in Auto Scaling group",
            "Type": "Number"
        },
        "CloudFrontEnable": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Enable CloudFront Content Delivery Network",
            "Type": "String"
        },
        "CloudFrontPriceClass":{
            "AllowedValues":[
                "use-all-edge-locations",
                "use-only-us-canada-europe-asia",
                "use-only-us-canada-europe"
            ],
            "Default": "use-all-edge-locations",
            "Description": "Select the price class associated with the maximum price that you want to pay for CloudFront service. If you select a price class other than All, some of your users may experience higher latency.",
            "Type": "String",
            "ConstraintDescription": "Select a valid CloudFront Price Class."
        },
        "CloudFrontAlias":{
            "Description": "Alias for the CloudFront distribution. E.g. cdn.example.com. Mandatory when using HTTPS/SSL and optional when using http.",
            "Type": "String",
            "Default": "cdn.default",
            "AllowedPattern": "(?!-)[a-zA-Z0-9-.]*(?<!-)",
            "ConstraintDescription": "Must be a valid fully-qualified domain name."
        },
        "Route53HostedZoneId": {
            "Description": "Route53 Hosted Zone ID",
            "Type": "String",
            "Default": ""
        },
        "ElastiCacheEnable": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Enable ElastiCache",
            "Type": "String"
        },
        "ElastiCacheAutoMinorVersionUpgrade":{
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Select true/false to setup Auto Minor Version upgrade",
            "Type": "String"
        },
        "ElastiCacheNodeType": {
            "AllowedValues": [
                "cache.t2.micro",
                "cache.t2.small",
                "cache.t2.medium",
                "cache.m3.medium",
                "cache.m3.large",
                "cache.m3.xlarge",
                "cache.m3.2xlarge",
                "cache.m4.large",
                "cache.m4.xlarge",
                "cache.m4.2xlarge",
                "cache.m4.4xlarge",
                "cache.m4.10xlarge",
                "cache.r3.large",
                "cache.r3.xlarge",
                "cache.r3.2xlarge",
                "cache.r3.4xlarge",
                "cache.r3.8xlarge",
                "cache.r4.large",
                "cache.r4.xlarge",
                "cache.r4.2xlarge",
                "cache.r4.4xlarge",
                "cache.r4.8xlarge",
                "cache.r4.16xlarge"
            ],
            "ConstraintDescription": "Must select a valid ElastiCache node type.",
            "Default": "cache.t2.micro",
            "Description": "The compute and memory capacity of nodes in a cache cluster.",
            "Type": "String"
        },
        "ElastiCacheNumberOfNodes": {
            "Default": "2",
            "MinValue": "1",
            "MaxValue": "20",
            "Description": "The number of cache nodes that the cache cluster should have.",
            "Type": "Number"
        }
    },
    "Rules": {
        "EFSSupportedRegionRule": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Contains": [
                            [
                                "us-east-1",
                                "us-east-2",
                                "us-west-2",
                                "eu-central-1",
                                "eu-west-1",
                                "ap-southeast-2"
                            ],
                            {
                                "Ref": "AWS::Region"
                            }
                        ]
                    },
                    "AssertDescription": "This Quick Start uses Amazon EFS which is only available in the US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Frankfurt), EU (Ireland) and Asia Pacific (Sydney) regions. Please launch the stack in one of these regions"
                }
            ]
        },
        "SslAndRoute53Rule":{
            "RuleCondition": 
            {"Fn::Or":[
                {"Fn::Not": [{"Fn::Equals":[{"Ref": "SSLCertificateId"}, ""]}]},
                {"Fn::Not": [{"Fn::Equals":[{"Ref": "Route53HostedZoneId"}, ""]}]}
            ]},
            "Assertions":[
                {
                    "Assert": {"Fn::Not":[{"Fn::Equals":[{"Ref": "DrupalSiteDomain"}, "localhost.local"]}]},
                    "AssertDescription": "Parameter DrupalSiteDomain cannot be the default value 'localhost.local' and must provide FQDN e.g. example.com, when SSLCertificateId or Route53HostedZoneIdis values are provided."
                },
                {
                    "Assert": {"Fn::Not":[{"Fn::Equals":[{"Ref": "CloudFrontAlias"}, "cdn.default"]}]},
                    "AssertDescription": "Parameter CloudFrontAlias cannot be the default value 'cdn.default' and must provide FQDN e.g. cdn.example.com, when SSLCertificateId or Route53HostedZoneIdis values are provided."
                }
            ]
        }
    },
    "Conditions": {
        "ElastiCacheEnableCondition": {
            "Fn::Equals": [
                {
                    "Ref": "ElastiCacheEnable"
                },
                "true"
            ]
        }
    },
    "Resources": {
        "SecurityGroupsStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/securitygroups.template"
                },
                "Parameters": {
                    "VPC": {
                        "Ref": "VPCID"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "BastionSecurityGroupID": {
                        "Ref": "BastionSecurityGroupID"
                    }
                }
            }
        },
        "RDSAuroraStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/rdsaurora.template"
                },
                "Parameters": {
                    "Subnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet1ID"
                                },
                                {
                                    "Ref": "PrivateSubnet2ID"
                                }
                            ]
                        ]
                    },
                    "AuroraRDSSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupsStack",
                            "Outputs.AuroraRDSSecurityGroup"
                        ]
                    },
                    "DBAutoMinorVersionUpgrade": {
                        "Ref": "DBAutoMinorVersionUpgrade"
                    },
                    "DBBackupRetentionPeriod": {
                        "Ref": "DBBackupRetentionPeriod"
                    },
                    "DBInstanceClass": {
                        "Ref": "DBInstanceClass"
                    },
                    "DBMasterUsername": {
                        "Ref": "DBMasterUsername"
                    },
                    "DBMasterUserPassword": {
                        "Ref": "DBMasterUserPassword"
                    },
                    "DBMultiAZ": {
                        "Ref": "DBMultiAZ"
                    }
                }
            }
        },
        "ElastiCacheStack":{
            "Type": "AWS::CloudFormation::Stack",
            "Condition": "ElastiCacheEnableCondition",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/elasticache.template"
                },
                "Parameters":{
                    "Subnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet1ID"
                                },
                                {
                                    "Ref": "PrivateSubnet2ID"
                                }
                            ]
                        ]
                    },
                    "ElastiCacheSecurityGroup":{
                        "Fn::GetAtt": [
                            "SecurityGroupsStack",
                            "Outputs.ElastiCacheSecurityGroup"
                        ]
                    },
                    "AutoMinorVersionUpgrade":{
                        "Ref": "ElastiCacheAutoMinorVersionUpgrade"
                    },
                    "NodeType":{
                        "Ref": "ElastiCacheNodeType"
                    },
                    "NumberOfNode":{
                        "Ref": "ElastiCacheNumberOfNodes"
                    }
                }
            }
        },
        "WebserverStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/webserver.template"
                },
                "Parameters": {
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "AutoScalingNotificationEmail": {
                        "Ref": "AutoScalingNotificationEmail"
                    },
                    "WebServerSubnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet1ID"
                                },
                                {
                                    "Ref": "PrivateSubnet2ID"
                                }
                            ]
                        ]
                    },
                    "EFSSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupsStack",
                            "Outputs.EFSSecurityGroup"
                        ]
                    },
                    "WebServerInstanceType": {
                        "Ref": "WebServerInstanceType"
                    },
                    "WebServerSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupsStack",
                            "Outputs.WebServerSecurityGroup"
                        ]
                    },
                    "KeyPair": {
                        "Ref": "KeyPair"
                    },
                    "DBEndpointAddress": {
                        "Fn::GetAtt": [
                            "RDSAuroraStack",
                            "Outputs.AuroraEndPointAddress"
                        ]
                    },
                    "DBMasterUsername": {
                        "Ref": "DBMasterUsername"
                    },
                    "DBMasterUserPassword": {
                        "Ref": "DBMasterUserPassword"
                    },
                    "DrupalDbName": {
                        "Ref": "DrupalDbName"
                    },
                    "DrupalDbUsername": {
                        "Ref": "DrupalDbUsername"
                    },
                    "DrupalDbPassword": {
                        "Ref": "DrupalDbPassword"
                    },
                    "PhpVersion": {
                        "Ref": "PhpVersion"
                    },
                    "DrupalVersion": {
                        "Ref": "DrupalVersion"
                    },
                    "DrupalSiteName": {
                        "Ref": "DrupalSiteName"
                    },
                    "DrupalSiteAdminEmail": {
                        "Ref": "DrupalSiteAdminEmail"
                    },
                    "DrupalSiteAdminUsername": {
                        "Ref": "DrupalSiteAdminUsername"
                    },
                    "DrupalSiteAdminPassword": {
                        "Ref": "DrupalSiteAdminPassword"
                    },
                    "DrupalSiteDomain": {
                        "Ref": "DrupalSiteDomain"
                    },
                    "WebServerMinSize": {
                        "Ref": "WebServerMinSize"
                    },
                    "WebServerMaxSize": {
                        "Ref": "WebServerMaxSize"
                    },
                    "WebServerDesiredCapacity": {
                        "Ref": "WebServerDesiredCapacity"
                    },
                    "PublicSubnet1ID": {
                        "Ref": "PublicSubnet1ID"
                    },
                    "PublicSubnet2ID": {
                        "Ref": "PublicSubnet2ID"
                    },
                    "VPCID": {
                        "Ref": "VPCID"
                    },
                    "WebELBSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupsStack",
                            "Outputs.ELBSecurityGroup"
                        ]
                    },
                    "SSLCertificateId": {
                        "Ref": "SSLCertificateId"
                    },
                    "CloudFrontEnable":{
                        "Ref": "CloudFrontEnable"
                    },
                    "CloudFrontAlias":{
                        "Ref": "CloudFrontAlias"
                    },
                    "CloudFrontPriceClass":{
                        "Ref": "CloudFrontPriceClass"
                    },
                    "Route53HostedZoneId":{
                        "Ref": "Route53HostedZoneId"
                    },
                    "EnableElastiCache": {
                        "Ref": "ElastiCacheEnable"
                    },
                    "ElastiCacheClusterId":{
                        "Fn::If":[
                            "ElastiCacheEnableCondition",
                            {"Fn::GetAtt": ["ElastiCacheStack", "Outputs.ElastiCacheClusterId"]},
                            ""
                        ]
                    }
                }
            }
        }
        
    },
    "Outputs": {
        "ELBURL": {
            "Description": "The URL of the ELB that you should use to create a CNAME/ALIAS DNS recrod to point to your Domain e.g. mysite.com",
            "Value": {
                "Fn::GetAtt": [
                    "WebserverStack",
                    "Outputs.ELBURL"
                ]
            }
        },
        "DrupalSiteUrl":{
            "Description": "Drupal Site URL",
            "Value": {"Ref": "DrupalSiteDomain"}
        }
    }
}
